<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        agAAAABJRU5ErkJggg==
</value>
  </data>
</root>